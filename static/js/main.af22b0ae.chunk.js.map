{"version":3,"sources":["components/clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","className","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","clockName","clockInVisible","clockVisible","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAc,CACZC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAG1BM,QAAQC,IAAI,EAAKT,MAAMC,KAAKS,wBAC3B,OAbP,gCAgBE,SAAmBC,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAGhCJ,QAAQC,IAAR,uBAA4BE,EAAUC,KAAtC,eAAiDR,KAAKS,MAAMD,SApBlE,kCAwBE,WACEP,OAAOS,cAAcV,KAAKD,WAzB9B,oBA4BE,WACE,IAAQS,EAASR,KAAKS,MAAdD,KACAX,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGd,EAAKS,8BAzChB,GAA2BM,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAGX,IAAMK,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAWR,KAHf,EAeES,eAAiB,WACf,EAAKnB,SAAS,CAAEiB,UAAU,KAhB9B,EAmBEG,aAAe,WACb,EAAKpB,SAAS,CAAEiB,UAAU,KApB9B,uDAME,WAAqB,IAAD,OAClBI,SAASC,iBAAiB,cAAezB,KAAKsB,gBAC9CE,SAASC,iBAAiB,QAASzB,KAAKuB,cAExCtB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEkB,UAAWR,QAC1B,QAZP,oBAuBE,WACE,MAAgCb,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKT,UAAU,MAAf,UACE,6CACCS,GACE,cAAC,EAAD,CAAOZ,KAAMa,WA9BxB,GAAyBT,aCPzBc,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.af22b0ae.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  time: Date,\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state:State = {\n    time: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ time: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.time.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.clockInVisible);\n    document.addEventListener('click', this.clockVisible);\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  clockInVisible = () => {\n    this.setState({ hasClock: false });\n  };\n\n  clockVisible = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock\n        && <Clock name={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}